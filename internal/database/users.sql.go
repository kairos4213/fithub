// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  id,
  created_at,
  updated_at,
  first_name,
  middle_name,
  last_name,
  email,
  hashed_password
) VALUES (gen_random_uuid(), NOW(), NOW(), $1, $2, $3, $4, $5)
RETURNING id, first_name, last_name, email
`

type CreateUserParams struct {
	FirstName      string
	MiddleName     sql.NullString
	LastName       string
	Email          string
	HashedPassword string
}

type CreateUserRow struct {
	ID        uuid.UUID
	FirstName string
	LastName  string
	Email     string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.FirstName,
		arg.MiddleName,
		arg.LastName,
		arg.Email,
		arg.HashedPassword,
	)
	var i CreateUserRow
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Email,
	)
	return i, err
}
